"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/ncp/list/route";
exports.ids = ["app/api/ncp/list/route"];
exports.modules = {

/***/ "better-sqlite3":
/*!*********************************!*\
  !*** external "better-sqlite3" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("better-sqlite3");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fncp%2Flist%2Froute&page=%2Fapi%2Fncp%2Flist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fncp%2Flist%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fncp%2Flist%2Froute&page=%2Fapi%2Fncp%2Flist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fncp%2Flist%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_runner_workspace_app_api_ncp_list_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/ncp/list/route.ts */ \"(rsc)/./app/api/ncp/list/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/ncp/list/route\",\n        pathname: \"/api/ncp/list\",\n        filename: \"route\",\n        bundlePath: \"app/api/ncp/list/route\"\n    },\n    resolvedPagePath: \"/home/runner/workspace/app/api/ncp/list/route.ts\",\n    nextConfigOutput,\n    userland: _home_runner_workspace_app_api_ncp_list_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/ncp/list/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZuY3AlMkZsaXN0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZuY3AlMkZsaXN0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbmNwJTJGbGlzdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGcnVubmVyJTJGd29ya3NwYWNlJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZob21lJTJGcnVubmVyJTJGd29ya3NwYWNlJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNBO0FBQzdFO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8/YjJmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL2FwcC9hcGkvbmNwL2xpc3Qvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL25jcC9saXN0L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbmNwL2xpc3RcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL25jcC9saXN0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9hcHAvYXBpL25jcC9saXN0L3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9uY3AvbGlzdC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fncp%2Flist%2Froute&page=%2Fapi%2Fncp%2Flist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fncp%2Flist%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/ncp/list/route.ts":
/*!***********************************!*\
  !*** ./app/api/ncp/list/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./lib/database.ts\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./lib/auth.ts\");\n\n\n\nasync function GET(request) {\n    try {\n        const user = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.verifyAuth)(request);\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const { searchParams } = new URL(request.url);\n        const type = searchParams.get(\"type\") || \"all\";\n        let reports;\n        if (type === \"pending\") {\n            reports = (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.getPendingNCPsForRole)(user.role, user.username);\n        } else {\n            reports = (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.getNCPReportsForUser)(user.id, user.role, user.username);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: reports\n        });\n    } catch (error) {\n        console.error(\"Error fetching NCP reports:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch NCP reports\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL25jcC9saXN0L3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNEQ7QUFDZ0I7QUFDckM7QUFFaEMsZUFBZUksSUFBSUMsT0FBb0I7SUFDNUMsSUFBSTtRQUNGLE1BQU1DLE9BQU8sTUFBTUgscURBQVVBLENBQUNFO1FBQzlCLElBQUksQ0FBQ0MsTUFBTTtZQUNULE9BQU9OLHFEQUFZQSxDQUFDTyxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBZSxHQUFHO2dCQUFFQyxRQUFRO1lBQUk7UUFDcEU7UUFFQSxNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLElBQUlDLElBQUlOLFFBQVFPLEdBQUc7UUFDNUMsTUFBTUMsT0FBT0gsYUFBYUksR0FBRyxDQUFDLFdBQVc7UUFFekMsSUFBSUM7UUFDSixJQUFJRixTQUFTLFdBQVc7WUFDdEJFLFVBQVViLG9FQUFxQkEsQ0FBQ0ksS0FBS1UsSUFBSSxFQUFFVixLQUFLVyxRQUFRO1FBQzFELE9BQU87WUFDTEYsVUFBVWQsbUVBQW9CQSxDQUFDSyxLQUFLWSxFQUFFLEVBQUVaLEtBQUtVLElBQUksRUFBRVYsS0FBS1csUUFBUTtRQUNsRTtRQUVBLE9BQU9qQixxREFBWUEsQ0FBQ08sSUFBSSxDQUFDO1lBQ3ZCWSxTQUFTO1lBQ1RDLE1BQU1MO1FBQ1I7SUFDRixFQUFFLE9BQU9QLE9BQU87UUFDZGEsUUFBUWIsS0FBSyxDQUFDLCtCQUErQkE7UUFDN0MsT0FBT1IscURBQVlBLENBQUNPLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQThCLEdBQUc7WUFBRUMsUUFBUTtRQUFJO0lBQ25GO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vYXBwL2FwaS9uY3AvbGlzdC9yb3V0ZS50cz9lNWJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHR5cGUgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiXG5pbXBvcnQgeyBnZXROQ1BSZXBvcnRzRm9yVXNlciwgZ2V0UGVuZGluZ05DUHNGb3JSb2xlIH0gZnJvbSBcIkAvbGliL2RhdGFiYXNlXCJcbmltcG9ydCB7IHZlcmlmeUF1dGggfSBmcm9tIFwiQC9saWIvYXV0aFwiXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgdmVyaWZ5QXV0aChyZXF1ZXN0KVxuICAgIGlmICghdXNlcikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6IFwiVW5hdXRob3JpemVkXCIgfSwgeyBzdGF0dXM6IDQwMSB9KVxuICAgIH1cblxuICAgIGNvbnN0IHsgc2VhcmNoUGFyYW1zIH0gPSBuZXcgVVJMKHJlcXVlc3QudXJsKVxuICAgIGNvbnN0IHR5cGUgPSBzZWFyY2hQYXJhbXMuZ2V0KFwidHlwZVwiKSB8fCBcImFsbFwiXG5cbiAgICBsZXQgcmVwb3J0c1xuICAgIGlmICh0eXBlID09PSBcInBlbmRpbmdcIikge1xuICAgICAgcmVwb3J0cyA9IGdldFBlbmRpbmdOQ1BzRm9yUm9sZSh1c2VyLnJvbGUsIHVzZXIudXNlcm5hbWUpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcG9ydHMgPSBnZXROQ1BSZXBvcnRzRm9yVXNlcih1c2VyLmlkLCB1c2VyLnJvbGUsIHVzZXIudXNlcm5hbWUpXG4gICAgfVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiByZXBvcnRzLFxuICAgIH0pXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIE5DUCByZXBvcnRzOlwiLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogXCJGYWlsZWQgdG8gZmV0Y2ggTkNQIHJlcG9ydHNcIiB9LCB7IHN0YXR1czogNTAwIH0pXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJnZXROQ1BSZXBvcnRzRm9yVXNlciIsImdldFBlbmRpbmdOQ1BzRm9yUm9sZSIsInZlcmlmeUF1dGgiLCJHRVQiLCJyZXF1ZXN0IiwidXNlciIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsInNlYXJjaFBhcmFtcyIsIlVSTCIsInVybCIsInR5cGUiLCJnZXQiLCJyZXBvcnRzIiwicm9sZSIsInVzZXJuYW1lIiwiaWQiLCJzdWNjZXNzIiwiZGF0YSIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/ncp/list/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAuth: () => (/* binding */ verifyAuth)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/webapi/jwt/verify.js\");\n\nconst secret = new TextEncoder().encode(process.env.JWT_SECRET || \"your-secret-key\");\nasync function verifyAuth(request) {\n    try {\n        const token = request.cookies.get(\"auth-token\")?.value;\n        if (!token) {\n            return null;\n        }\n        const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_0__.jwtVerify)(token, secret);\n        return {\n            id: payload.userId,\n            username: payload.username,\n            role: payload.role\n        };\n    } catch (error) {\n        console.error(\"Auth verification error:\", error);\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUNnQztBQUVoQyxNQUFNQyxTQUFTLElBQUlDLGNBQWNDLE1BQU0sQ0FBQ0MsUUFBUUMsR0FBRyxDQUFDQyxVQUFVLElBQUk7QUFFM0QsZUFBZUMsV0FBV0MsT0FBb0I7SUFDbkQsSUFBSTtRQUNGLE1BQU1DLFFBQVFELFFBQVFFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGVBQWVDO1FBRWpELElBQUksQ0FBQ0gsT0FBTztZQUNWLE9BQU87UUFDVDtRQUVBLE1BQU0sRUFBRUksT0FBTyxFQUFFLEdBQUcsTUFBTWIsK0NBQVNBLENBQUNTLE9BQU9SO1FBRTNDLE9BQU87WUFDTGEsSUFBSUQsUUFBUUUsTUFBTTtZQUNsQkMsVUFBVUgsUUFBUUcsUUFBUTtZQUMxQkMsTUFBTUosUUFBUUksSUFBSTtRQUNwQjtJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsNEJBQTRCQTtRQUMxQyxPQUFPO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9saWIvYXV0aC50cz9iZjdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTmV4dFJlcXVlc3QgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIlxuaW1wb3J0IHsgand0VmVyaWZ5IH0gZnJvbSBcImpvc2VcIlxuXG5jb25zdCBzZWNyZXQgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUocHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCB8fCBcInlvdXItc2VjcmV0LWtleVwiKVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5QXV0aChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHRva2VuID0gcmVxdWVzdC5jb29raWVzLmdldChcImF1dGgtdG9rZW5cIik/LnZhbHVlXG5cbiAgICBpZiAoIXRva2VuKSB7XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIGNvbnN0IHsgcGF5bG9hZCB9ID0gYXdhaXQgand0VmVyaWZ5KHRva2VuLCBzZWNyZXQpXG5cbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IHBheWxvYWQudXNlcklkIGFzIG51bWJlcixcbiAgICAgIHVzZXJuYW1lOiBwYXlsb2FkLnVzZXJuYW1lIGFzIHN0cmluZyxcbiAgICAgIHJvbGU6IHBheWxvYWQucm9sZSBhcyBzdHJpbmcsXG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJBdXRoIHZlcmlmaWNhdGlvbiBlcnJvcjpcIiwgZXJyb3IpXG4gICAgcmV0dXJuIG51bGxcbiAgfVxufVxuIl0sIm5hbWVzIjpbImp3dFZlcmlmeSIsInNlY3JldCIsIlRleHRFbmNvZGVyIiwiZW5jb2RlIiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJ2ZXJpZnlBdXRoIiwicmVxdWVzdCIsInRva2VuIiwiY29va2llcyIsImdldCIsInZhbHVlIiwicGF5bG9hZCIsImlkIiwidXNlcklkIiwidXNlcm5hbWUiLCJyb2xlIiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   approveNCPByProcessLead: () => (/* binding */ approveNCPByProcessLead),\n/* harmony export */   approveNCPByQALeader: () => (/* binding */ approveNCPByQALeader),\n/* harmony export */   approveNCPByQAManager: () => (/* binding */ approveNCPByQAManager),\n/* harmony export */   authenticateUser: () => (/* binding */ authenticateUser),\n/* harmony export */   createNCPReport: () => (/* binding */ createNCPReport),\n/* harmony export */   createNotification: () => (/* binding */ createNotification),\n/* harmony export */   createNotificationForRole: () => (/* binding */ createNotificationForRole),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   generateNCPNumber: () => (/* binding */ generateNCPNumber),\n/* harmony export */   getNCPById: () => (/* binding */ getNCPById),\n/* harmony export */   getNCPReportsForUser: () => (/* binding */ getNCPReportsForUser),\n/* harmony export */   getNCPStatistics: () => (/* binding */ getNCPStatistics),\n/* harmony export */   getNCPStatisticsForRole: () => (/* binding */ getNCPStatisticsForRole),\n/* harmony export */   getNotificationsForUser: () => (/* binding */ getNotificationsForUser),\n/* harmony export */   getPendingNCPsForRole: () => (/* binding */ getPendingNCPsForRole),\n/* harmony export */   getUnreadNotificationCount: () => (/* binding */ getUnreadNotificationCount),\n/* harmony export */   getUserByUsername: () => (/* binding */ getUserByUsername),\n/* harmony export */   initializeDatabase: () => (/* binding */ initializeDatabase),\n/* harmony export */   markAllNotificationsAsRead: () => (/* binding */ markAllNotificationsAsRead),\n/* harmony export */   markNotificationAsRead: () => (/* binding */ markNotificationAsRead),\n/* harmony export */   processNCPByTeamLeader: () => (/* binding */ processNCPByTeamLeader),\n/* harmony export */   rejectNCPByProcessLead: () => (/* binding */ rejectNCPByProcessLead),\n/* harmony export */   rejectNCPByQALeader: () => (/* binding */ rejectNCPByQALeader),\n/* harmony export */   rejectNCPByQAManager: () => (/* binding */ rejectNCPByQAManager),\n/* harmony export */   updateExistingRecords: () => (/* binding */ updateExistingRecords)\n/* harmony export */ });\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! better-sqlite3 */ \"better-sqlite3\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(better_sqlite3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n\n\n// Database schema and connection\nconst db = new (better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default())(\"qa_portal.db\");\n// Initialize database tables (called only if tables don't exist)\nfunction initializeDatabase() {\n    // Check if tables exist\n    const tablesExist = db.prepare(\"SELECT name FROM sqlite_master WHERE type='table' AND name='users'\").get();\n    if (tablesExist) {\n        return;\n    }\n    // Users table\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS users (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      username TEXT UNIQUE NOT NULL,\n      password TEXT NOT NULL,\n      role TEXT DEFAULT 'user',\n      full_name TEXT,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n    )\n  `);\n    // NCP Reports table with extended fields for approval workflow\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS ncp_reports (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      ncp_id TEXT UNIQUE NOT NULL,\n      sku_code TEXT NOT NULL,\n      machine_code TEXT NOT NULL,\n      date TEXT NOT NULL,\n      time_incident TEXT NOT NULL,\n      hold_quantity INTEGER NOT NULL,\n      hold_quantity_uom TEXT NOT NULL,\n      problem_description TEXT NOT NULL,\n      photo_attachment TEXT,\n      qa_leader TEXT NOT NULL,\n      status TEXT DEFAULT 'pending',\n      submitted_by TEXT NOT NULL,\n      submitted_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      \n      -- QA Leader Approval Fields\n      qa_approved_by TEXT,\n      qa_approved_at DATETIME,\n      disposisi TEXT,\n      jumlah_sortir TEXT DEFAULT '0',\n      jumlah_release TEXT DEFAULT '0',\n      jumlah_reject TEXT DEFAULT '0',\n      assigned_team_leader TEXT,\n      qa_rejection_reason TEXT,\n      \n      -- Team Leader Fields\n      tl_processed_by TEXT,\n      tl_processed_at DATETIME,\n      root_cause_analysis TEXT,\n      corrective_action TEXT,\n      preventive_action TEXT,\n      \n      -- Process Lead Fields\n      process_approved_by TEXT,\n      process_approved_at DATETIME,\n      process_rejection_reason TEXT,\n      process_comment TEXT,\n      \n      -- QA Manager Fields\n      manager_approved_by TEXT,\n      manager_approved_at DATETIME,\n      manager_rejection_reason TEXT,\n      manager_comment TEXT,\n      \n      -- Final status\n      archived_at DATETIME\n    )\n  `);\n    // Notifications table\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS notifications (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      user_id INTEGER NOT NULL,\n      ncp_id TEXT NOT NULL,\n      title TEXT NOT NULL,\n      message TEXT NOT NULL,\n      type TEXT DEFAULT 'info',\n      is_read BOOLEAN DEFAULT FALSE,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      FOREIGN KEY (user_id) REFERENCES users (id)\n    )\n  `);\n}\n// FIXED: Generate automatic NCP number with format YYMM-XXXX\nfunction generateNCPNumber() {\n    const now = new Date();\n    const year = now.getFullYear().toString().slice(-2);\n    const month = (now.getMonth() + 1).toString().padStart(2, \"0\");\n    // Get the latest serial number for current year\n    const latestRecord = db.prepare(`\n    SELECT ncp_id FROM ncp_reports \n    WHERE ncp_id LIKE ? \n    ORDER BY ncp_id DESC \n    LIMIT 1\n  `).get(`${year}${month}-%`);\n    let serialNumber = 1;\n    if (latestRecord) {\n        const existingSerial = latestRecord.ncp_id.split(\"-\")[1];\n        serialNumber = Number.parseInt(existingSerial) + 1;\n    }\n    const formattedSerial = serialNumber.toString().padStart(4, \"0\");\n    return `${year}${month}-${formattedSerial}`;\n}\n// FIXED: User authentication functions\nasync function authenticateUser(username, password) {\n    const user = db.prepare(\"SELECT * FROM users WHERE username = ?\").get(username);\n    if (!user) return null;\n    const isValid = await (0,bcryptjs__WEBPACK_IMPORTED_MODULE_1__.compare)(password, user.password);\n    if (!isValid) return null;\n    return {\n        id: user.id,\n        username: user.username,\n        role: user.role,\n        fullName: user.full_name\n    };\n}\n// Get user by username\nfunction getUserByUsername(username) {\n    return db.prepare(\"SELECT id, username, role, full_name FROM users WHERE username = ?\").get(username);\n}\n// FIXED: NCP Report functions\nfunction createNCPReport(data) {\n    const ncpId = generateNCPNumber();\n    const stmt = db.prepare(`\n    INSERT INTO ncp_reports (\n      ncp_id, sku_code, machine_code, date, time_incident,\n      hold_quantity, hold_quantity_uom, problem_description,\n      photo_attachment, qa_leader, submitted_by\n    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n  `);\n    const result = stmt.run(ncpId, data.skuCode, data.machineCode, data.date, data.timeIncident, data.holdQuantity, data.holdQuantityUOM, data.problemDescription, data.photoAttachment, data.qaLeader, data.submittedBy);\n    // Create notification for QA Leaders\n    createNotificationForRole(\"qa_leader\", ncpId, \"New NCP Submitted\", `NCP ${ncpId} requires your approval`);\n    return {\n        id: result.lastInsertRowid,\n        ncpId\n    };\n}\n// Get NCPs based on user role and permissions\nfunction getNCPReportsForUser(userId, userRole, username) {\n    let query = \"SELECT * FROM ncp_reports\";\n    let params = [];\n    switch(userRole){\n        case \"user\":\n            query += \" WHERE submitted_by = ? ORDER BY submitted_at DESC\";\n            params = [\n                username\n            ];\n            break;\n        case \"qa_leader\":\n            query += \" ORDER BY submitted_at DESC\";\n            break;\n        case \"team_leader\":\n            query += \" WHERE assigned_team_leader = ? ORDER BY submitted_at DESC\";\n            params = [\n                username\n            ];\n            break;\n        case \"process_lead\":\n            query += \" WHERE status IN ('tl_processed', 'process_approved', 'process_rejected') ORDER BY submitted_at DESC\";\n            break;\n        case \"qa_manager\":\n        case \"admin\":\n            query += \" ORDER BY submitted_at DESC\";\n            break;\n        default:\n            query += \" WHERE submitted_by = ? ORDER BY submitted_at DESC\";\n            params = [\n                username\n            ];\n    }\n    const results = db.prepare(query).all(...params);\n    return results;\n}\n// FIXED: Get pending NCPs for approval based on role\nfunction getPendingNCPsForRole(userRole, username) {\n    let query = \"\";\n    let params = [];\n    switch(userRole){\n        case \"qa_leader\":\n            query = \"SELECT * FROM ncp_reports WHERE status = 'pending' ORDER BY submitted_at ASC\";\n            break;\n        case \"team_leader\":\n            // FIXED: Show NCPs assigned to this team leader\n            query = `\n        SELECT * FROM ncp_reports \n        WHERE assigned_team_leader = ? \n        AND status IN ('qa_approved', 'tl_processed') \n        ORDER BY qa_approved_at ASC\n      `;\n            params = [\n                username\n            ];\n            break;\n        case \"process_lead\":\n            query = \"SELECT * FROM ncp_reports WHERE status = 'tl_processed' ORDER BY tl_processed_at ASC\";\n            break;\n        case \"qa_manager\":\n            query = \"SELECT * FROM ncp_reports WHERE status = 'process_approved' ORDER BY process_approved_at ASC\";\n            break;\n        default:\n            return [];\n    }\n    const results = db.prepare(query).all(...params);\n    return results;\n}\n// Get single NCP by ID\nfunction getNCPById(id) {\n    const result = db.prepare(\"SELECT * FROM ncp_reports WHERE id = ?\").get(id);\n    return result;\n}\n// FIXED: QA Leader approval - Proper data flow to Team Leader\nfunction approveNCPByQALeader(id, approvalData, qaLeaderUsername) {\n    const stmt = db.prepare(`\n    UPDATE ncp_reports \n    SET status = 'qa_approved',\n        qa_approved_by = ?,\n        qa_approved_at = CURRENT_TIMESTAMP,\n        disposisi = ?,\n        jumlah_sortir = ?,\n        jumlah_release = ?,\n        jumlah_reject = ?,\n        assigned_team_leader = ?\n    WHERE id = ?\n  `);\n    const result = stmt.run(qaLeaderUsername, approvalData.disposisi, approvalData.jumlahSortir || \"0\", approvalData.jumlahRelease || \"0\", approvalData.jumlahReject || \"0\", approvalData.assignedTeamLeader, id);\n    if (result.changes > 0) {\n        // Get NCP details for notification\n        const ncp = db.prepare(\"SELECT ncp_id FROM ncp_reports WHERE id = ?\").get(id);\n        // FIXED: Create notification for assigned team leader using the exact username\n        const teamLeaderUser = db.prepare(\"SELECT id FROM users WHERE username = ?\").get(approvalData.assignedTeamLeader);\n        if (teamLeaderUser) {\n            createNotification(teamLeaderUser.id, ncp.ncp_id, \"NCP Assigned to You\", `NCP ${ncp.ncp_id} has been approved by QA Leader and assigned to you for RCA analysis`);\n        }\n        // Also create notification for all team leaders as backup\n        createNotificationForRole(\"team_leader\", ncp.ncp_id, \"New NCP Assignment\", `NCP ${ncp.ncp_id} has been approved and assigned to ${approvalData.assignedTeamLeader}`);\n    }\n    return result;\n}\n// QA Leader rejection\nfunction rejectNCPByQALeader(id, rejectionReason, qaLeaderUsername) {\n    const stmt = db.prepare(`\n    UPDATE ncp_reports \n    SET status = 'qa_rejected',\n        qa_approved_by = ?,\n        qa_approved_at = CURRENT_TIMESTAMP,\n        qa_rejection_reason = ?\n    WHERE id = ?\n  `);\n    const result = stmt.run(qaLeaderUsername, rejectionReason, id);\n    return result;\n}\n// Team Leader processing\nfunction processNCPByTeamLeader(id, processData, teamLeaderUsername) {\n    const stmt = db.prepare(`\n    UPDATE ncp_reports \n    SET status = 'tl_processed',\n        tl_processed_by = ?,\n        tl_processed_at = CURRENT_TIMESTAMP,\n        root_cause_analysis = ?,\n        corrective_action = ?,\n        preventive_action = ?\n    WHERE id = ?\n  `);\n    const result = stmt.run(teamLeaderUsername, processData.rootCauseAnalysis, processData.correctiveAction, processData.preventiveAction, id);\n    if (result.changes > 0) {\n        // Get NCP details for notification\n        const ncp = db.prepare(\"SELECT ncp_id FROM ncp_reports WHERE id = ?\").get(id);\n        // Create notification for process leads\n        createNotificationForRole(\"process_lead\", ncp.ncp_id, \"NCP Ready for Process Review\", `NCP ${ncp.ncp_id} has been processed by Team Leader and requires process review`);\n    }\n    return result;\n}\n// Process Lead approval functions\nfunction approveNCPByProcessLead(id, comment, processLeadUsername) {\n    const stmt = db.prepare(`\n    UPDATE ncp_reports \n    SET status = 'process_approved',\n        process_approved_by = ?,\n        process_approved_at = CURRENT_TIMESTAMP,\n        process_comment = ?\n    WHERE id = ?\n  `);\n    const result = stmt.run(processLeadUsername, comment, id);\n    if (result.changes > 0) {\n        // Get NCP details for notification\n        const ncp = db.prepare(\"SELECT ncp_id FROM ncp_reports WHERE id = ?\").get(id);\n        // Create notification for QA Managers\n        createNotificationForRole(\"qa_manager\", ncp.ncp_id, \"NCP Ready for Final Approval\", `NCP ${ncp.ncp_id} has been approved by Process Lead and requires final QA Manager approval`);\n    }\n    return result;\n}\nfunction rejectNCPByProcessLead(id, rejectionReason, processLeadUsername) {\n    const stmt = db.prepare(`\n    UPDATE ncp_reports \n    SET status = 'qa_approved',\n        process_approved_by = ?,\n        process_approved_at = CURRENT_TIMESTAMP,\n        process_rejection_reason = ?\n    WHERE id = ?\n  `);\n    const result = stmt.run(processLeadUsername, rejectionReason, id);\n    if (result.changes > 0) {\n        // Get NCP details for notification\n        const ncp = db.prepare(\"SELECT ncp_id, assigned_team_leader FROM ncp_reports WHERE id = ?\").get(id);\n        // Create notification for assigned team leader\n        const teamLeaderUser = db.prepare(\"SELECT id FROM users WHERE username = ?\").get(ncp.assigned_team_leader);\n        if (teamLeaderUser) {\n            createNotification(teamLeaderUser.id, ncp.ncp_id, \"NCP Rejected by Process Lead\", `NCP ${ncp.ncp_id} has been rejected by Process Lead and returned for reprocessing. Reason: ${rejectionReason}`);\n        }\n    }\n    return result;\n}\n// QA Manager approval functions\nfunction approveNCPByQAManager(id, comment, qaManagerUsername) {\n    const stmt = db.prepare(`\n    UPDATE ncp_reports \n    SET status = 'manager_approved',\n        manager_approved_by = ?,\n        manager_approved_at = CURRENT_TIMESTAMP,\n        manager_comment = ?,\n        archived_at = CURRENT_TIMESTAMP\n    WHERE id = ?\n  `);\n    const result = stmt.run(qaManagerUsername, comment, id);\n    if (result.changes > 0) {\n        // Get NCP details for notification\n        const ncp = db.prepare(\"SELECT ncp_id, submitted_by FROM ncp_reports WHERE id = ?\").get(id);\n        // Create notification for original submitter\n        const submitterUser = db.prepare(\"SELECT id FROM users WHERE username = ?\").get(ncp.submitted_by);\n        if (submitterUser) {\n            createNotification(submitterUser.id, ncp.ncp_id, \"NCP Workflow Completed\", `NCP ${ncp.ncp_id} has been fully approved and archived. The workflow is now complete.`);\n        }\n        // Also notify QA Leader\n        const ncpDetails = db.prepare(\"SELECT qa_approved_by FROM ncp_reports WHERE id = ?\").get(id);\n        if (ncpDetails.qa_approved_by) {\n            const qaLeaderUser = db.prepare(\"SELECT id FROM users WHERE username = ?\").get(ncpDetails.qa_approved_by);\n            if (qaLeaderUser) {\n                createNotification(qaLeaderUser.id, ncp.ncp_id, \"NCP Workflow Completed\", `NCP ${ncp.ncp_id} has been fully approved by QA Manager and archived.`);\n            }\n        }\n    }\n    return result;\n}\nfunction rejectNCPByQAManager(id, rejectionReason, qaManagerUsername) {\n    const stmt = db.prepare(`\n    UPDATE ncp_reports \n    SET status = 'qa_approved',\n        manager_approved_by = ?,\n        manager_approved_at = CURRENT_TIMESTAMP,\n        manager_rejection_reason = ?\n    WHERE id = ?\n  `);\n    const result = stmt.run(qaManagerUsername, rejectionReason, id);\n    if (result.changes > 0) {\n        // Get NCP details for notification\n        const ncp = db.prepare(\"SELECT ncp_id, assigned_team_leader FROM ncp_reports WHERE id = ?\").get(id);\n        // Create notification for assigned team leader\n        const teamLeaderUser = db.prepare(\"SELECT id FROM users WHERE username = ?\").get(ncp.assigned_team_leader);\n        if (teamLeaderUser) {\n            createNotification(teamLeaderUser.id, ncp.ncp_id, \"NCP Rejected by QA Manager\", `NCP ${ncp.ncp_id} has been rejected by QA Manager and returned for reprocessing. Reason: ${rejectionReason}`);\n        }\n    }\n    return result;\n}\n// FIXED: Notification functions\nfunction createNotification(userId, ncpId, title, message, type = \"info\") {\n    const stmt = db.prepare(`\n    INSERT INTO notifications (user_id, ncp_id, title, message, type)\n    VALUES (?, ?, ?, ?, ?)\n  `);\n    const result = stmt.run(userId, ncpId, title, message, type);\n    return result;\n}\nfunction createNotificationForRole(role, ncpId, title, message, type = \"info\") {\n    const users = db.prepare(\"SELECT id FROM users WHERE role = ?\").all(role);\n    for (const user of users){\n        createNotification(user.id, ncpId, title, message, type);\n    }\n}\nfunction getNotificationsForUser(userId, limit = 10) {\n    return db.prepare(`\n    SELECT * FROM notifications \n    WHERE user_id = ? \n    ORDER BY created_at DESC \n    LIMIT ?\n  `).all(userId, limit);\n}\nfunction getUnreadNotificationCount(userId) {\n    const result = db.prepare(\"SELECT COUNT(*) as count FROM notifications WHERE user_id = ? AND is_read = FALSE\").get(userId);\n    return result.count;\n}\nfunction markNotificationAsRead(notificationId) {\n    return db.prepare(\"UPDATE notifications SET is_read = TRUE WHERE id = ?\").run(notificationId);\n}\nfunction markAllNotificationsAsRead(userId) {\n    return db.prepare(\"UPDATE notifications SET is_read = TRUE WHERE user_id = ?\").run(userId);\n}\n// Statistics functions\nfunction getNCPStatistics() {\n    const total = db.prepare(\"SELECT COUNT(*) as count FROM ncp_reports\").get();\n    const pending = db.prepare('SELECT COUNT(*) as count FROM ncp_reports WHERE status = \"pending\"').get();\n    const qaApproved = db.prepare('SELECT COUNT(*) as count FROM ncp_reports WHERE status = \"qa_approved\"').get();\n    const tlProcessed = db.prepare('SELECT COUNT(*) as count FROM ncp_reports WHERE status = \"tl_processed\"').get();\n    const rejected = db.prepare('SELECT COUNT(*) as count FROM ncp_reports WHERE status LIKE \"%rejected\"').get();\n    return {\n        total: total.count,\n        pending: pending.count,\n        qaApproved: qaApproved.count,\n        tlProcessed: tlProcessed.count,\n        rejected: rejected.count\n    };\n}\nfunction getNCPStatisticsForRole(userRole, username) {\n    let baseQuery = \"\";\n    let params = [];\n    switch(userRole){\n        case \"user\":\n            baseQuery = \"FROM ncp_reports WHERE submitted_by = ?\";\n            params = [\n                username\n            ];\n            break;\n        case \"qa_leader\":\n            baseQuery = \"FROM ncp_reports\";\n            break;\n        case \"team_leader\":\n            baseQuery = \"FROM ncp_reports WHERE assigned_team_leader = ?\";\n            params = [\n                username\n            ];\n            break;\n        default:\n            baseQuery = \"FROM ncp_reports\";\n    }\n    const total = db.prepare(`SELECT COUNT(*) as count ${baseQuery}`).get(...params);\n    const pending = db.prepare(`SELECT COUNT(*) as count ${baseQuery} AND status = 'pending'`).get(...params);\n    const approved = db.prepare(`SELECT COUNT(*) as count ${baseQuery} AND status LIKE '%approved'`).get(...params);\n    const processed = db.prepare(`SELECT COUNT(*) as count ${baseQuery} AND status LIKE '%processed'`).get(...params);\n    return {\n        total: total.count,\n        pending: pending.count,\n        approved: approved.count,\n        processed: processed.count\n    };\n}\n// Update existing records to have default values for new columns\nfunction updateExistingRecords() {\n    const updateQuery = `\n    UPDATE ncp_reports SET \n      jumlah_sortir = COALESCE(jumlah_sortir, '0'),\n      jumlah_release = COALESCE(jumlah_release, '0'), \n      jumlah_reject = COALESCE(jumlah_reject, '0')\n    WHERE jumlah_sortir IS NULL OR jumlah_release IS NULL OR jumlah_reject IS NULL\n  `;\n    const result = db.prepare(updateQuery).run();\n    return result;\n}\n// Initialize database on import\ninitializeDatabase();\nupdateExistingRecords();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/jose","vendor-chunks/bcryptjs"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fncp%2Flist%2Froute&page=%2Fapi%2Fncp%2Flist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fncp%2Flist%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();